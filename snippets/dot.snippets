#http://www.graphviz.org/doc/info/index.html
snippet graph
	digraph ${1:G} {
	}
snippet graph?
	digraph ${1:G} {
		bgcolor=${2:white};
		pad=${3:0.5};/* the spaces appended to the edge of the drawing */
		ranksep=${4:"1.1 equally"};
		nodesep=${5:"1.0 equally"};
		rankdir=${6:LR|TB|BT|RL};
		splines=${7:""|true|false|ortho};
	}
snippet node?
	node [shape=${1:record|Mrecord|box|triangle|ellipse|plaintext|diamond|point|folder|box3d|component|circle|note|tab},
		color=${2:blue},
		label=${3:"label"},
		style=${4:solid|dashed|dotted|bold|filled|diagonals|rounded|invis},
		fontcolor=${5:black},
		group=${6:"group_name"},/* if end points of an edge belong to the same group, dot tries to avoid corssing and keep edges straight */
		image=${7:"path"}];
snippet edge?
	edge [label=${1:"label"},
		headport=${2:n|ne|e|se|s|sw|w|nw},/* specify tailport if desired */
		color=${4:black},
		lhead=${5:cluster_name},/* the head will point at the cluster contains the head node. specify ltail if desired */ 
		arrowhead=${6:empty|normal|dot|odot|inv|none|diamond|odiamond|vee},
		style=${7:bold|dotted|solid|filled|dashed|invis},
		headlabel=${8:"headlabel or taillabel"},/* specify taillabel if desired */
		samehead=${9:"head_name"},/* edges with the same name will point to the same point on target node, specify sametail if desired */];
		constraint=${10:false},/* the edge doesn't affect rank assignment */
		weight=${11:2}];
snippet rank
	{ rank = same; ${1:node1;} }
snippet record
	${1:name} [shape=record,label="${2:h_field1|{<port_name> v_field2|v_field3}}"];
snippet edge
	${1:node:port} -> ${2:node2:port};
snippet cluster
	subgraph cluster_${1:name} {
		color=${2:black};
		label=${3:"label"};
		style=${4:bold|dotted|solid|filled|dashed};
	}
#inherit
snippet inh
	${1:child} -> ${2:parent} [arrowhead=empty];
#aggregation
snippet agg
	${1:item} -> ${2:container} [arrowhead=odiamond];
#composition
snippet com
	${1:part} -> ${2:whole} [arrowhead=diamond];
#implements
snippet imp
	${1:class} -> ${2:interface} [arrowhead=empty,style=dashed];
#depends
snippet dep
	${1:class} -> ${2:target} [arrowhead=vee,style=dashed];
snippet	class
	${1:name} [shape=record,label="{${2:class_name}|${3:- attr1\n- attr2}|${4:+ method}}"];
snippet	if
	${1:check} [shape=diamond,label="${2:check if?}"];
	
